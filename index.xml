<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UBC Chem-E-Car: The University of British Columbia</title>
    <link>http://www.ubcchemecar.com/index.xml</link>
    <description>Recent content on UBC Chem-E-Car: The University of British Columbia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (C) 2016 UBC Chem-E-Car. All rights reserved.</copyright>
    <lastBuildDate>Thu, 24 Nov 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.ubcchemecar.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Importance of Trial and Error</title>
      <link>http://www.ubcchemecar.com/blog/2016/11/24/trial-and-error/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/blog/2016/11/24/trial-and-error/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Welcome everyone to the first of (hopefully) many blog posts for the UBC Chem-E-Car Team. The purpose of these posts is to give you, the reader insight into how our organization is run. Through this we hope to generate interest in our organization and to help get other students involved.&lt;/p&gt;

&lt;p&gt;The topic of our first post is on the importance of trial and error. Most people will look at a finished product and comment on how sleek or amazing it is; while conveniently ignoring that it took years of tinkering and modifications for that item to even function properly!&lt;/p&gt;

&lt;p&gt;First let’s take a look at the first electronic circuit that I ever made for Chem-E-Car:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/first.jpg&#34; alt=&#34;First&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The entire device is a mess! There are wires everywhere, tons of unused board real estate, and parts that have to be tied together to fit on the board. Likewise, unsecured parts have a very unreliable connection and break off easily.&lt;/p&gt;

&lt;p&gt;Over the summer I made a new model with the focus of eliminating loose wires and better utilizing space, this is the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/second.jpg&#34; alt=&#34;Second&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This model utilizes a lot less space, is easy to stack, and most of the components are stabilized on the board itself. However, during assembly I needed a lot of extra parts since directly soldering them often destroyed the part if not done properly. Another issue is that the model needed 4 stacks (making it really tall), and the lights and switches were not necessary. Now let’s look at the second iteration:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/third.jpg&#34; alt=&#34;Third&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The board is even MORE compact, features detachable modules for easy replacement, and utilizes an SD card and opto-gate for recording data. However, the connectors were unreliable, the copper on the board was unprotected and prone to damage which destroyed the circuit at times, and data could not be read in real time.&lt;/p&gt;

&lt;p&gt;To fix these issues I developed a 4th and final board:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/fourth.jpg&#34; alt=&#34;Fourth&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This system uses reliable connectors that can only be inserted in one direction, is completely modular (easy to replace destroyed parts), has a silkscreen layer that protects the circuit, only uses one layer, and utilizes a bluetooth system for real time data collection on a mobile phone!&lt;/p&gt;

&lt;p&gt;Here is an image of all the circuits for an overall comparison:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/comparison.jpg&#34; alt=&#34;Comparison&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;reflections&#34;&gt;Reflections&lt;/h3&gt;

&lt;p&gt;These circuits are 1.5 years of continuous design and iteration, with each model having its flaws analyzed and corrected. They were made by an entry level chemical engineering student with NO prior experience or knowledge of electronics. The moral of the story? Good design is all about making something, figuring out what works and doesn’t work then rebuilding it until it sort of works.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.ubcchemecar.com/img/blog/trial-and-error/quote.jpg&#34; alt=&#34;Quote&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So, to any beginner in terms of design, don’t despair! Rather look at what you can learn from your prototype and how it can be improved.&lt;/p&gt;

&lt;p&gt;In that sense it is important to seek the feedback of experienced individuals. Their experience (in how NOT to do things wrong by doing it wrong) is invaluable for any would-be inventor. Look at how others have done things and learn accordingly from it. Finally remember, every master in a subject started from knowing nothing; the difference between them and the amateurs is that they never stopped trying to learn.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>http://www.ubcchemecar.com/blog/2015/10/10/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>http://www.ubcchemecar.com/blog/2015/10/10/migrate-from-jekyll/</guid>
      <description>

&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;should become&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ static/
        ▾ images/
            logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-your-hugo-configuration-file&#34;&gt;Create your Hugo configuration file&lt;/h2&gt;

&lt;p&gt;Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the &lt;a href=&#34;http://www.ubcchemecar.com/overview/configuration/&#34;&gt;Hugo configuration documentation&lt;/a&gt; for details.&lt;/p&gt;

&lt;h2 id=&#34;set-your-configuration-publish-folder-to-site&#34;&gt;Set your configuration publish folder to &lt;code&gt;_site&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The default is for Jekyll to publish to &lt;code&gt;_site&lt;/code&gt; and for Hugo to publish to &lt;code&gt;public&lt;/code&gt;. If, like me, you have &lt;a href=&#34;http://blog.blindgaenger.net/generate_github_pages_in_a_submodule.html&#34;&gt;&lt;code&gt;_site&lt;/code&gt; mapped to a git submodule on the &lt;code&gt;gh-pages&lt;/code&gt; branch&lt;/a&gt;, you&amp;rsquo;ll want to do one of two alternatives:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Change your submodule to point to map &lt;code&gt;gh-pages&lt;/code&gt; to public instead of &lt;code&gt;_site&lt;/code&gt; (recommended).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule deinit _site
git rm _site
git submodule add -b gh-pages git@github.com:your-username/your-repo.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Or, change the Hugo configuration to use &lt;code&gt;_site&lt;/code&gt; instead of &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    ..
    &amp;quot;publishdir&amp;quot;: &amp;quot;_site&amp;quot;,
    ..
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;convert-jekyll-templates-to-hugo-templates&#34;&gt;Convert Jekyll templates to Hugo templates&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to &lt;a href=&#34;http://jekyllrb.com/docs/templates/&#34;&gt;Jekyll&amp;rsquo;s template documentation&lt;/a&gt; if you need to refresh your memory on how you built your blog and &lt;a href=&#34;http://www.ubcchemecar.com/layout/templates/&#34;&gt;Hugo&amp;rsquo;s template&lt;/a&gt; to learn Hugo&amp;rsquo;s way.&lt;/p&gt;

&lt;p&gt;As a single reference data point, converting my templates for &lt;a href=&#34;http://heyitsalex.net/&#34;&gt;heyitsalex.net&lt;/a&gt; took me no more than a few hours.&lt;/p&gt;

&lt;h2 id=&#34;convert-jekyll-plugins-to-hugo-shortcodes&#34;&gt;Convert Jekyll plugins to Hugo shortcodes&lt;/h2&gt;

&lt;p&gt;Jekyll has &lt;a href=&#34;http://jekyllrb.com/docs/plugins/&#34;&gt;plugins&lt;/a&gt;; Hugo has &lt;a href=&#34;http://www.ubcchemecar.com/doc/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;. It&amp;rsquo;s fairly trivial to do a port.&lt;/p&gt;

&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;

&lt;p&gt;As an example, I was using a custom &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/blob/74bb12036a71334fdb7dba84e073382fc06908ec/_plugins/image_tag.rb&#34;&gt;&lt;code&gt;image_tag&lt;/code&gt;&lt;/a&gt; plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.&lt;/p&gt;

&lt;p&gt;Jekyll&amp;rsquo;s plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Jekyll
  class ImageTag &amp;lt; Liquid::Tag
    @url = nil
    @caption = nil
    @class = nil
    @link = nil
    // Patterns
    IMAGE_URL_WITH_CLASS_AND_CAPTION =
    IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\w+)(\s+)((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;(\s+)-&amp;gt;((https?:\/\/|\/)(\S+))(\s*)/i
    IMAGE_URL_WITH_CAPTION = /((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;/i
    IMAGE_URL_WITH_CLASS = /(\w+)(\s+)((https?:\/\/|\/)(\S+))/i
    IMAGE_URL = /((https?:\/\/|\/)(\S+))/i
    def initialize(tag_name, markup, tokens)
      super
      if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK
        @class   = $1
        @url     = $3
        @caption = $7
        @link = $9
      elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION
        @class   = $1
        @url     = $3
        @caption = $7
      elsif markup =~ IMAGE_URL_WITH_CAPTION
        @url     = $1
        @caption = $5
      elsif markup =~ IMAGE_URL_WITH_CLASS
        @class = $1
        @url   = $3
      elsif markup =~ IMAGE_URL
        @url = $1
      end
    end
    def render(context)
      if @class
        source = &amp;quot;&amp;lt;figure class=&#39;#{@class}&#39;&amp;gt;&amp;quot;
      else
        source = &amp;quot;&amp;lt;figure&amp;gt;&amp;quot;
      end
      if @link
        source += &amp;quot;&amp;lt;a href=\&amp;quot;#{@link}\&amp;quot;&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;img src=\&amp;quot;#{@url}\&amp;quot;&amp;gt;&amp;quot;
      if @link
        source += &amp;quot;&amp;lt;/a&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;figcaption&amp;gt;#{@caption}&amp;lt;/figcaption&amp;gt;&amp;quot; if @caption
      source += &amp;quot;&amp;lt;/figure&amp;gt;&amp;quot;
      source
    end
  end
end
Liquid::Template.register_tag(&#39;image&#39;, Jekyll::ImageTag)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is written as this Hugo shortcode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- image --&amp;gt;
&amp;lt;figure {{ with .Get &amp;quot;class&amp;quot; }}class=&amp;quot;{{.}}&amp;quot;{{ end }}&amp;gt;
    {{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}
        &amp;lt;img src=&amp;quot;{{ .Get &amp;quot;src&amp;quot; }}&amp;quot; {{ if or (.Get &amp;quot;alt&amp;quot;) (.Get &amp;quot;caption&amp;quot;) }}alt=&amp;quot;{{ with .Get &amp;quot;alt&amp;quot;}}{{.}}{{else}}{{ .Get &amp;quot;caption&amp;quot; }}{{ end }}&amp;quot;{{ end }} /&amp;gt;
    {{ if .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}
    {{ if or (or (.Get &amp;quot;title&amp;quot;) (.Get &amp;quot;caption&amp;quot;)) (.Get &amp;quot;attr&amp;quot;)}}
    &amp;lt;figcaption&amp;gt;{{ if isset .Params &amp;quot;title&amp;quot; }}
        {{ .Get &amp;quot;title&amp;quot; }}{{ end }}
        {{ if or (.Get &amp;quot;caption&amp;quot;) (.Get &amp;quot;attr&amp;quot;)}}&amp;lt;p&amp;gt;
        {{ .Get &amp;quot;caption&amp;quot; }}
        {{ with .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt; {{ end }}
            {{ .Get &amp;quot;attr&amp;quot; }}
        {{ if .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;/a&amp;gt; {{ end }}
        &amp;lt;/p&amp;gt; {{ end }}
    &amp;lt;/figcaption&amp;gt;
    {{ end }}
&amp;lt;/figure&amp;gt;
&amp;lt;!-- image --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;I simply changed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were &amp;quot;having fun&amp;quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; -&amp;gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to this (this example uses a slightly extended version named &lt;code&gt;fig&lt;/code&gt;, different than the built-in &lt;code&gt;figure&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fig class=&amp;quot;full&amp;quot; src=&amp;quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&amp;quot; title=&amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; link=&amp;quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&amp;quot; %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a bonus, the shortcode named parameters are, arguably, more readable.&lt;/p&gt;

&lt;h2 id=&#34;finishing-touches&#34;&gt;Finishing touches&lt;/h2&gt;

&lt;h3 id=&#34;fix-content&#34;&gt;Fix content&lt;/h3&gt;

&lt;p&gt;Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that &lt;code&gt;hugo server --watch&lt;/code&gt; is your friend. Test your changes and fix errors as needed.&lt;/p&gt;

&lt;h3 id=&#34;clean-up&#34;&gt;Clean up&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn&amp;rsquo;t used, delete it.&lt;/p&gt;

&lt;h2 id=&#34;a-practical-example-in-a-diff&#34;&gt;A practical example in a diff&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://heyitsalex.net/&#34;&gt;Hey, it&amp;rsquo;s Alex&lt;/a&gt; was migrated in less than a &lt;em&gt;father-with-kids day&lt;/em&gt; from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b81495423294208cc74d610&#34;&gt;diff&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>http://www.ubcchemecar.com/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>http://www.ubcchemecar.com/blog/2015/10/02/linked-post/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;menu = &amp;quot;main&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus. Pellentesque sed tempus risus. Proin id hendrerit ante. Vestibulum vitae urna ut mauris ultricies dignissim. Ut ante turpis, tristique vitae sagittis quis, sagittis nec diam. Fusce pulvinar cursus porta. Vivamus maximus leo dolor, ut pellentesque lorem fringilla nec. Mauris faucibus turpis posuere sapien euismod, a ullamcorper mi maximus.&lt;/p&gt;

&lt;p&gt;Morbi varius ex vel justo dictum placerat. Sed ac arcu pretium, varius elit eget, gravida purus. Fusce sit amet massa mollis eros tincidunt sollicitudin. Suspendisse iaculis cursus mauris ut sagittis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas elit ligula, molestie quis magna eu, semper posuere lorem. Mauris a justo pharetra, congue ex eget, tincidunt massa. Maecenas sit amet neque lorem.&lt;/p&gt;

&lt;p&gt;Curabitur at elementum quam. Curabitur tristique elit non sapien aliquam vulputate. Vivamus in odio tincidunt, tempor sem quis, tincidunt lacus. Mauris pulvinar nunc sed tempus dictum. Nam vel arcu quis mi fermentum ullamcorper non ac lacus. Donec aliquet vitae ante at imperdiet. Aenean scelerisque venenatis urna, eget elementum risus convallis ac. Nullam gravida arcu lacus, non consectetur augue pretium non. Duis dignissim eros id urna pretium congue. Nullam eu magna in sem sollicitudin tempor. Pellentesque vel convallis ligula. Quisque semper, turpis a rhoncus efficitur, magna nibh iaculis elit, eget tempor dolor eros ut mi. Maecenas eu placerat lacus. Praesent congue pretium nulla, sed suscipit metus rutrum vel.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>http://www.ubcchemecar.com/blog/2015/09/17/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>http://www.ubcchemecar.com/blog/2015/09/17/go-is-for-lovers/</guid>
      <description>

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-go-templates&#34;&gt;Introduction to Go Templates&lt;/h2&gt;

&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;

&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;

&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;http://www.ubcchemecar.com/layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;http://www.ubcchemecar.com/layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;includes&#34;&gt;Includes&lt;/h2&gt;

&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logic&#34;&gt;Logic&lt;/h2&gt;

&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;

&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ range array }}
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $element := array}}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conditionals&#34;&gt;Conditionals&lt;/h3&gt;

&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;

&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pipes&#34;&gt;Pipes&lt;/h2&gt;

&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;

&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;

&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the same as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Could be rewritten as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;Context (aka. the dot)&lt;/h2&gt;

&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize | lower  }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;

&lt;h1 id=&#34;hugo-parameters&#34;&gt;Hugo Parameters&lt;/h1&gt;

&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;

&lt;h2 id=&#34;using-content-page-parameters&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;

&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;http://www.ubcchemecar.com/content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;

&lt;p&gt;Here is the example front matter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-site-config-parameters&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;

&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;

&lt;p&gt;For instance, you might declare:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;params:
  CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot;
  TwitterUser: &amp;quot;spf13&amp;quot;
  SidebarRecentLimit: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>http://www.ubcchemecar.com/blog/2015/08/03/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>http://www.ubcchemecar.com/blog/2015/08/03/hugo-is-for-lovers/</guid>
      <description>

&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Goto &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;http://www.ubcchemecar.com/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-2-build-the-docs&#34;&gt;Step 2. Build the Docs&lt;/h2&gt;

&lt;p&gt;Hugo has its own example site which happens to also be the documentation site
you are reading right now.&lt;/p&gt;

&lt;p&gt;Follow the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone the &lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;hugo repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go into the repo&lt;/li&gt;
&lt;li&gt;Run hugo in server mode and build the docs&lt;/li&gt;
&lt;li&gt;Open your browser to &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Corresponding pseudo commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you&amp;rsquo;ve gotten here, follow along the rest of this page on your local build.&lt;/p&gt;

&lt;h2 id=&#34;step-3-change-the-docs-site&#34;&gt;Step 3. Change the docs site&lt;/h2&gt;

&lt;p&gt;Stop the Hugo process by hitting ctrl+c.&lt;/p&gt;

&lt;p&gt;Now we are going to run hugo again, but this time with hugo in watch mode.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open your &lt;a href=&#34;http://vim.spf13.com&#34;&gt;favorite editor&lt;/a&gt; and change one of the source
content pages. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Content files are found in &lt;code&gt;docs/content/&lt;/code&gt;. Unless otherwise specified, files
are located at the same relative location as the url, in our case
&lt;code&gt;docs/content/overview/quickstart.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Change and save this file.. Notice what happened in your terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; Change detected, rebuilding site

&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 26 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Refresh the browser and observe that the typo is now fixed.&lt;/p&gt;

&lt;p&gt;Notice how quick that was. Try to refresh the site before it&amp;rsquo;s finished building.. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.&lt;/p&gt;

&lt;h2 id=&#34;step-4-have-fun&#34;&gt;Step 4. Have fun&lt;/h2&gt;

&lt;p&gt;The best way to learn something is to play with it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://www.ubcchemecar.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/contact/</guid>
      <description>

&lt;h1 id=&#34;looking-for-someone&#34;&gt;Looking for someone?&lt;/h1&gt;

&lt;h3 id=&#34;all-general-inquiries-info-ubcchemecar-com-mailto-info-ubcchemecar-com&#34;&gt;All General Inquiries: &lt;a href=&#34;mailto:info@ubcchemecar.com&#34;&gt;info@ubcchemecar.com&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;admin&#34;&gt;Admin&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Captain&amp;rsquo;s email - &lt;a href=&#34;mailto:captain@ubcchemecar.com&#34;&gt;captain@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Junior Team Captains - &lt;a href=&#34;mailto:juniorlead@ubcchemecar.com&#34;&gt;juniorlead@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sponsorship inquiries - &lt;a href=&#34;mailto:sponsorship@ubcchemecar.com&#34;&gt;sponsorship@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Admin and website-related issues - &lt;a href=&#34;mailto:admin@ubcchemecar.com&#34;&gt;admin@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lab Managers - &lt;a href=&#34;mailto:labmanager@ubcchemecar.com&#34;&gt;labmanager@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;senior-team-contacts&#34;&gt;Senior Team Contacts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Battery/Chemical Team - &lt;a href=&#34;mailto:battery@ubcchemecar.com&#34;&gt;battery@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mechanical Team - &lt;a href=&#34;mailto:mechanical@ubcchemecar.com&#34;&gt;mechanical@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Electrical Team - &lt;a href=&#34;mailto:mechanical@ubcchemecar.com&#34;&gt;electrical@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;junior-team-contacts&#34;&gt;Junior Team Contacts&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Junior Team Captains - &lt;a href=&#34;mailto:juniorlead@ubcchemecar.com&#34;&gt;juniorlead@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Junior Mechanical Lead - &lt;a href=&#34;mailto:juniormech@ubcchemecar.com&#34;&gt;juniormech@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Junior Battery Lead - &lt;a href=&#34;mailto:juniorbatt@ubcchemecar.com&#34;&gt;juniorbatt@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Junior Chemical Lead - &lt;a href=&#34;mailto:juniorchem@ubcchemecar.com&#34;&gt;juniorchem@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Junior Electrical Lead - &lt;a href=&#34;mailto:juniorelec@ubcchemecar.com&#34;&gt;juniorelec@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Internal Team Links</title>
      <link>http://www.ubcchemecar.com/internal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/internal/</guid>
      <description>

&lt;h1 id=&#34;lab-access&#34;&gt;Lab Access&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;lab-sign-in-https-form-jotform-com-63001712223236-lab-sign-out-https-form-jotform-com-63001791811246-lab-inventory-https-docs-google-com-spreadsheets-d-1zpqp23z02i8iavz902okutuoukcsblerkjtw3zqjmju-edit-gid-0-h-oaqfsbodl-lab-sop-https-drive-google-com-open-id-0bxa5rjpqh-p-mmhsq1deluhlnjq-upload-safety-certificates-https-form-jotform-com-62887715352263&#34;&gt;&lt;a href=&#34;https://form.jotform.com/63001712223236&#34;&gt;Lab Sign In&lt;/a&gt; | &lt;a href=&#34;https://form.jotform.com/63001791811246&#34;&gt;Lab Sign Out&lt;/a&gt; | &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1zPqP23Z02I8iavZ902oKUTuOukcSbLERkJTW3zqJMJU/edit#gid=0&amp;amp;h=oAQFsbOdl&#34;&gt;Lab Inventory&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/open?id=0BxA5RJPqh-P_MmhSQ1dELUhLNjQ&#34;&gt;Lab SOP&lt;/a&gt; | &lt;a href=&#34;https://form.jotform.com/62887715352263&#34;&gt;Upload Safety Certificates&lt;/a&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;div class=&#34;row text-center&#34;&gt;  
  &lt;div class=&#34;responsiveCal&#34;&gt;
    &lt;iframe src=&#34;https://calendar.google.com/calendar/embed?src=chemecarlogistics%40gmail.com&amp;ctz=America/Vancouver&#34; style=&#34;border-width:0&#34; width=&#34;800&#34; height=&#34;600&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;     
  &lt;/div&gt;                     
&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;team-assets&#34;&gt;Team Assets&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;google-drive-https-drive-google-com-drive-u-1-folders-0bxa5rjpqh-p-wlzvtlrvmi1gv00-finance-app-http-finance-ubcchemecar-com-junior-car-battery-proposal-https-drive-google-com-open-id-0bzhmhyppv3ewvmrynzvozklrqy1ewe45u0s1nxh3bmh1ognz&#34;&gt;&lt;a href=&#34;https://drive.google.com/drive/u/1/folders/0BxA5RJPqh-P_WlZvTlRvMi1GV00&#34;&gt;Google Drive&lt;/a&gt; | &lt;a href=&#34;http://finance.ubcchemecar.com/&#34;&gt;Finance App&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/open?id=0BzHMHyppV3eWVmRyNzVoZklRQy1EWE45U0s1NXh3bmh1OGNz&#34;&gt;Junior Car Battery Proposal&lt;/a&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;misc&#34;&gt;Misc&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;ubc-engineering-design-team-handbook-docs-edt-handbook-pdf&#34;&gt;&lt;a href=&#34;http://www.ubcchemecar.com/docs/EDT_handbook.pdf&#34;&gt;UBC Engineering Design Team Handbook&lt;/a&gt;&lt;/h2&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>New Members Infopack</title>
      <link>http://www.ubcchemecar.com/infopack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/infopack/</guid>
      <description>

&lt;h2 id=&#34;ubc-chem-e-car-team-open-recruitment-policy&#34;&gt;UBC Chem-E-Car Team: Open Recruitment Policy&lt;/h2&gt;

&lt;h4 id=&#34;we-take-in-new-members-undergrad-and-grad-all-year-round-all-skill-levels-departments-and-faculties-welcomed&#34;&gt;We take in new members (undergrad and grad) all year round. All skill levels, departments and faculties welcomed.&lt;/h4&gt;

&lt;p&gt;Zero experience? No problem! If you&amp;rsquo;re interested in joining the team, please read on.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;0-next-steps&#34;&gt;0. Next Steps&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Questions: Junior Team Captains - Abhi and Victor at &lt;a href=mailto:juniorlead@ubcchemecar.com&gt;juniorlead@ubcchemecar.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you&amp;rsquo;re interested in joining the team, please read this page carefully.&lt;/p&gt;

&lt;h4 id=&#34;important-notes&#34;&gt;Important notes:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Make sure that you &lt;strong&gt;sign up for the mailing list&lt;/strong&gt; below.&lt;/li&gt;
&lt;li&gt;UBC Chem-E-Car has four main sub-teams: Electrical, Mechanical, Battery and Chemical. You can be involved with one or more sub-teams. Our team leads have listed some tutorials below that they would like our new members to try out. Feel free to contact them if you need help.&lt;/li&gt;
&lt;li&gt;Email the Junior Team Captains, Abhi and Victor and introduce yourself, they&amp;rsquo;ll provide you with more information on meeting times and answer any questions that you may have.&lt;/li&gt;
&lt;li&gt;Complete your safety certificates as soon as you can. You are still very welcomed to attend our meetings if you haven&amp;rsquo;t completed them, but you won&amp;rsquo;t be able to participate in any hands-on workshop or lab activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;1-prospective-members-readme&#34;&gt;1. Prospective Members Readme&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Expectations and general information for new members&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Our regular meeting hours for the current academic term are listed in the &lt;a href=&#34;http://www.ubcchemecar.com/contact/&#34;&gt;&lt;b&gt;Contact&lt;/b&gt; page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We value passion, commitment and dedication over prior technical experience. We will &lt;b&gt;never&lt;/b&gt; turn away anyone who&amp;rsquo;s genuinely interested in learning and contributing to the team.&lt;/li&gt;
&lt;li&gt;As a student-driven team, we understand that academics and schoolwork will be your first priority, and we do not expect you to work on our design team projects &lt;sup&gt;24&lt;/sup&gt;&amp;frasl;&lt;sub&gt;7&lt;/sub&gt; and neglect your assignments.&lt;/li&gt;
&lt;li&gt;To be a valuable contributor to the team, you should have a strong sense of responsibility and the ability to work independently with minimal supervision. Your team lead can provide guidance and point you in the right direction, but you are expected to take charge of your own projects.&lt;/li&gt;
&lt;li&gt;If you accept a task from your team lead, we do expect you to see it through to completion to the best of your ability, and within a reasonable amount of time.&lt;/li&gt;
&lt;li&gt;We &lt;b&gt;really&lt;/b&gt; appreciate proactiveness. If a certain job needs to be completed and you can manage it, please take initiative and volunteer! If you think something can be done in a better way, teach us! Everyone is here to learn, irrespective of whether they&amp;rsquo;ve been with the team for 5 years or 5 weeks.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;We want to stress that: &lt;/b&gt; if you have an empty plate and need more stuff to work on, &lt;b&gt;do not hesitate ask&lt;/b&gt;! We always have proposals that need to be written, posters that need to be designed, sponsors to be contacted and many other tasks that need to be completed.&lt;/li&gt;
&lt;li&gt;Most students would consider joining an engineering design team to be a big commitment, and we tend to agree. Feel free to just drop by our regular meetings or events to explore our projects and your options, absolutely no pressure to commit for the whole term/year!&lt;/li&gt;
&lt;li&gt;We want everyone to learn new skills through our projects and have fun working in a team. But it is important to note that ultimately, your personal experience and what you get out of the team is what you put in.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;2-sign-up-for-the-mailing-list&#34;&gt;2. Sign Up For the Mailing List&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;New and prospective members: Please sign up for the mailing list before you do anything else.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- Begin MailChimp Signup Form --&gt;

&lt;p&gt;&lt;link href=&#34;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;
#mc_embed_signup{background:#ffe; clear:left; font:14px Helvetica,Arial,sans-serif; }
&lt;/style&gt;
&lt;div id=&#34;mc_embed_signup&#34;&gt;
&lt;form action=&#34;//ubcchemecar.us11.list-manage.com/subscribe/post?u=919b72f1aaf70072354dd9010&amp;amp;id=fb55bcb4c5&#34; method=&#34;post&#34; id=&#34;mc-embedded-subscribe-form&#34; name=&#34;mc-embedded-subscribe-form&#34; class=&#34;validate&#34; target=&#34;_blank&#34; novalidate&gt;
&lt;div id=&#34;mc_embed_signup_scroll&#34;&gt;
&lt;h2&gt;UBC Chem-E-Car Mailing List&lt;/h2&gt;
  &lt;div class=&#34;indicates-required&#34;&gt;&lt;span class=&#34;asterisk&#34;&gt;&lt;em&gt;&lt;/span&gt; indicates required&lt;/div&gt;
  &lt;div class=&#34;mc-field-group&#34;&gt;
&lt;label for=&#34;mce-EMAIL&#34;&gt;Email Address  &lt;span class=&#34;asterisk&#34;&gt;&lt;/em&gt;&lt;/span&gt;
  &lt;/label&gt;
&lt;input type=&#34;email&#34; value=&#34;&#34; name=&#34;EMAIL&#34; class=&#34;required email&#34; id=&#34;mce-EMAIL&#34;&gt;
  &lt;/div&gt;
  &lt;div class=&#34;mc-field-group&#34;&gt;
&lt;label for=&#34;mce-FNAME&#34;&gt;First Name &lt;/label&gt;
&lt;input type=&#34;text&#34; value=&#34;&#34; name=&#34;FNAME&#34; class=&#34;&#34; id=&#34;mce-FNAME&#34;&gt;
  &lt;/div&gt;
  &lt;div class=&#34;mc-field-group&#34;&gt;
&lt;label for=&#34;mce-LNAME&#34;&gt;Last Name &lt;/label&gt;
&lt;input type=&#34;text&#34; value=&#34;&#34; name=&#34;LNAME&#34; class=&#34;&#34; id=&#34;mce-LNAME&#34;&gt;
  &lt;/div&gt;
&lt;div id=&#34;mce-responses&#34; class=&#34;clear&#34;&gt;
  &lt;div class=&#34;response&#34; id=&#34;mce-error-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
  &lt;div class=&#34;response&#34; id=&#34;mce-success-response&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;
&lt;/div&gt;    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
  &lt;div style=&#34;position: absolute; left: -5000px;&#34; aria-hidden=&#34;true&#34;&gt;&lt;input type=&#34;text&#34; name=&#34;b_919b72f1aaf70072354dd9010_fb55bcb4c5&#34; tabindex=&#34;-1&#34; value=&#34;&#34;&gt;&lt;/div&gt;
  &lt;div class=&#34;clear&#34;&gt;&lt;input type=&#34;submit&#34; value=&#34;Subscribe&#34; name=&#34;subscribe&#34; id=&#34;mc-embedded-subscribe&#34; class=&#34;button&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;/form&gt;
  &lt;/div&gt;
  &lt;script type=&#39;text/javascript&#39; src=&#39;//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js&#39;&gt;&lt;/script&gt;&lt;script type=&#39;text/javascript&#39;&gt;(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]=&amp;lsquo;EMAIL&amp;rsquo;;ftypes[0]=&amp;lsquo;email&amp;rsquo;;fnames[1]=&amp;lsquo;FNAME&amp;rsquo;;ftypes[1]=&amp;lsquo;text&amp;rsquo;;fnames[2]=&amp;lsquo;LNAME&amp;rsquo;;ftypes[2]=&amp;lsquo;text&amp;rsquo;;}(jQuery));var $mcj = jQuery.noConflict(true);&lt;/script&gt;
  &lt;!--End mc_embed_signup--&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;3-safety-certificates&#34;&gt;3. Safety Certificates&lt;/h2&gt;

&lt;p&gt;Complete the following &lt;a href=&#34;https://www.hse2.ubc.ca/moodle/course/&#34;&gt;ONLINE SAFETY QUIZZES&lt;/a&gt; provided by UBC Risk Management Services. To gain access to our lab and workshop space, please &lt;b&gt;print out a hardcopy of these certificates&lt;/b&gt; and pass it to Negar (safety officer) at the next meeting. You can still attend our meetings but you won&amp;rsquo;t have lab or workshop access if you don&amp;rsquo;t complete these certificates. You&amp;rsquo;ll also need to register as an AIChE (American Institute of Chemical Engineers) student member and pass the AIChE safety quiz to compete in any Chem-E-Car competition organized by AIChE.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Mandatory Certificates, COMPLETE ASAP&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Engineering Design Team Safety Orientation&lt;/li&gt;
&lt;li&gt;Preventing and Addressing Workplace Bullying and Harassment&lt;/li&gt;
&lt;li&gt;Chemical Safety Course&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AIChE Registration and Safety Test, COMPLETE ASAP&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Complete the &lt;a href=&#34;http://www.aiche.org/community/students/chem-e-car-competition-rules/safety-training-test&#34;&gt;Chem-E-Car Competition® Safety Training Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sign up for a FREE AIChE student membership &lt;a href=&#34;http://www.aiche.org/community/students/student-membership&#34;&gt;AIChE Registration Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;4-electrical-tutorials&#34;&gt;4. Electrical Tutorials&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact Ngai To at logistics@ubcchemecar.com for questions or if you want to join the electrical team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The consensus is to focus on software skills, i.e. Arduino and general coding.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you haven&amp;rsquo;t, please download the latest version of Arduino: &lt;a href=&#34;https://www.arduino.cc/en/Main/Software&#34;&gt;Download the Arduino Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We will go over some basic if and while loop structures that are common in coding practices. We will also take a look at the coding for an encoder wheel. You can &lt;a href=&#34;http://machinedesign.com/sensors/basics-rotary-encoders-overview-and-new-technologies-0&#34;&gt;read more here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;5-mechanical-tutorials&#34;&gt;5. Mechanical Tutorials&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact Kyle at mechanical@ubcchemecar.com for questions or if you want to join the mechanical team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Try to get as familiar as possible with either Solidworks or Inventor before the next meeting. Note: You&amp;rsquo;ve learned/will be learning Solidworks in First Year Engineering.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and install Solidworks (caution: 8 GB file) &lt;a href=&#34;http://students.engineering.ubc.ca/success/software/&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download and install Inventor (caution: 15 GB file) &lt;a href=&#34;http://www.autodesk.com/education/free-software/featured&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Note: Chem-E-Car will be using Inventor mainly but will have some projects in Solidwor&lt;/li&gt;
&lt;li&gt;Solidworks : Please begin learning the program &lt;a href=&#34;https://www.youtube.com/watch?v=cy3ExIAcI2Y&#34;&gt;use this video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inventor: There is a built in tutorial. Please try to &lt;b&gt;complete tutorial part 1 and 2&lt;/b&gt; in the progr&lt;/li&gt;
&lt;li&gt;Try doing  &lt;a href=&#34;docs/Alistirmalar.pdf&#34;&gt; excercises up to 2-4 in this pdf&lt;/a&gt; using either Solidworks or Invent&lt;/li&gt;
&lt;li&gt;Exercise 2-5 is feasible but there are many shortcuts to make the pieces faster. Look up design tables, scale, or drawing relations, if you are interested.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn how to make a sphere&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-h2tCWrvaUM &#34;&gt;Solidworks: How to Make a Sphere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=psbjvl6kaH4&#34;&gt;Inventor: How to Make a Sphere&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;6-battery-and-chemical-tutorials&#34;&gt;6. Battery and Chemical Tutorials&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact Andy or Mani at battery@ubcchemecar.com for both chemical and battery teams&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please complete the following steps if you&amp;rsquo;re interested in joining the battery or chemical team. Note: we don&amp;rsquo;t expect you to understand EVERYTHING that we want you to read here, we just want you to get a good overview of some basic principles and type of batteries that we&amp;rsquo;ll be working on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bring a laptop to every meeting if you can, there will be a lot of research and Googling involved in most meetings.&lt;/li&gt;
&lt;li&gt;Review redox chemistry on ChemGuide &lt;a href=&#34;http://www.chemguide.co.uk/inorganic/redoxmenu.html&#34;&gt;http://www.chemguide.co.uk/inorganic/redoxmenu.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review the offical AIChE competition and safety rules &lt;a href=&#34;http://www.aiche.org/chem-e-car-competitionr-rules&#34;&gt;http://www.aiche.org/chem-e-car-competitionr-rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;battery&#34;&gt;Battery&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read Chapter 13 and 38.3 on Zn-Air batteries in Linden&amp;rsquo;s Handbook of Batteries (Google around for a free PDF if the link doesn&amp;rsquo;t work) &lt;a href=&#34;http://www.etf.unssa.rs.ba/~slubura/diplomski_radovi/Zavrsni_rad_MarkoSilj/Literatura/Handbook%20Of%20Batteries%203rd%20Edition.pdf&#34;&gt;PDF Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read Chapter 31 on Nickel-Zinc batteries in Linden&amp;rsquo;s Handbook of Batteries &lt;a href=&#34;http://www.etf.unssa.rs.ba/~slubura/diplomski_radovi/Zavrsni_rad_MarkoSilj/Literatura/Handbook%20Of%20Batteries%203rd%20Edition.pdf&#34;&gt;PDF Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;chemical&#34;&gt;Chemical&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read up on the Iodine Clock Reaction: &lt;a href=&#34;http://imaginationstationtoledo.org/content/2012/06/the-iodine-clock-reaction/&#34;&gt;Click This Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;7-web-development-and-software-tutorials&#34;&gt;7. Web Development and Software Tutorials&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact Siang at admin@ubcchemecar.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you&amp;rsquo;re interested in web development, complete the following steps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/join&#34;&gt;Sign up&lt;/a&gt; for a GitHub account&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://confluence.atlassian.com/bitbucket/set-up-git-744723531.html&#34;&gt;Setup Git&lt;/a&gt; on your machine.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://www.learnenough.com/git-tutorial&#34;&gt;Learn Enough Git tutorial&lt;/a&gt; and understand the basics. You may also want to read their Command Line tutorial and Text Editor tutorial if you&amp;rsquo;re unfamiliar with those tools.&lt;/li&gt;
&lt;li&gt;Email &lt;b&gt;Siang at admin@ubcchemecar.com &lt;/b&gt; for further instructions once you feel comfortable with the basics. Feel free to email too if you have any questions along the way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;beginners-start-here&#34;&gt;Beginners, start here!&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.yourhtmlsource.com/starthere/whatishtml.html&#34;&gt;Find out what is HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.learnenough.com/command-line-tutorial&#34;&gt;Learn Enough Command Line To Be Dangerous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://html.net/tutorials/css/lesson1.php&#34;&gt;Find out what is CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;the-bootstrap-framework&#34;&gt;The Bootstrap framework&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sitepoint.com/twitter-bootstrap-tutorial-handling-complex-designs/&#34;&gt;Introduction to Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=no-Ntkc836w&#34;&gt;Excellent 15-minute YouTube tutorial on Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;git&#34;&gt;Git&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0fKg7e37bQE&#34;&gt;What the heck is Github?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.learnenough.com/git-tutorial&#34;&gt;Learn Enough Git To Be Dangerous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;web-fundamentals&#34;&gt;Web Fundamentals&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/&#34;&gt;https://developers.google.com/web/fundamentals/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;8-administration&#34;&gt;8. Administration&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact Thanos or Siang - captain@ubcchemecar.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;rsquo;re always looking for people to help out with sponsorship, finances, lab and workspace management, marketing and lots of other important administrative stuff that keeps the team well-funded and running smoothly. Contact us if you&amp;rsquo;d like to help out.&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Sponsorship</title>
      <link>http://www.ubcchemecar.com/sponsors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/sponsors/</guid>
      <description>

&lt;h2 id=&#34;2016-2017-sponsorship-package-docs-ubc-chem-e-car-2016-2017-pdf&#34;&gt;&lt;a href=&#34;http://www.ubcchemecar.com/docs/UBC_Chem-E-Car_2016-2017.pdf&#34;&gt;2016-2017 Sponsorship Package&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Team</title>
      <link>http://www.ubcchemecar.com/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/team/</guid>
      <description>

&lt;h2 id=&#34;view-orgchart-orgchart&#34;&gt;&lt;a href=&#34;http://www.ubcchemecar.com/orgchart/&#34;&gt;View Orgchart&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>orgchart</title>
      <link>http://www.ubcchemecar.com/orgchart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.ubcchemecar.com/orgchart/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>